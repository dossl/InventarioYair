@model InventarioOtro.Models.Movimiento

@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<h4>Editar</h4>
@if (ViewBag.CreditoInsuficiente != null && ViewBag.CreditoInsuficiente)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong>Lo sentimos!</strong> <a href="#" class="alert-link">Pero no hay saldo suficiente para afrentar el gasto.</a>
    </div>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movimiento</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @{
            string a = @ViewBag.MontoAnterior.ToString();
            string b = @ViewBag.TipoAnterior.ToString();


        }
        @Html.Hidden("MontoAnterior", a)
        @Html.Hidden("TipoAnterior", b)
        @Html.Hidden("s",Model.FechaMovimiento, new { @id = "tFin" })

        <div class="row" style="margin-top: 55px">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Monto, htmlAttributes: new { @class = "control-label col-md-2 input-group-prepend" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Monto, new { htmlAttributes = new { @data_val_number = "Este campo debe ser un número", @class = "form-control", @type = "number", @step = 0.05 } })
                        @Html.ValidationMessageFor(model => model.Monto, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.TipoMovimiento, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @{
                            var listcriterio = new List<SelectListItem>();

                            listcriterio.Add(new SelectListItem()
                            {
                                Value = "1",
                                Text = "Ingreso"
                            });
                            listcriterio.Add(new SelectListItem()
                            {
                                Value = "2",
                                Text = "Gasto"
                            });
                            listcriterio.Add(new SelectListItem()
                            {
                                Value = "3",
                                Text = "Extracción"
                            });

                        }
                        @Html.DropDownListFor(model => model.TipoMovimiento, new SelectList(listcriterio, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoMovimiento, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row" style="margin-top: 5px">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.FechaMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FechaMovimiento, new { @class = "form-control", @type="date" })
                        @Html.ValidationMessageFor(model => model.FechaMovimiento, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Descripcion, 2, 50, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="row" style="margin-top: 20px">
            <div class="col-md-offset-2 col-md-1">
                <input id="edit_btn" type="submit" value="Aceptar" class="btn btn-primary" />
            </div>
            <div class="col-md-offset-2 col-md-2">
                <a role="button">@Html.ActionLink("Regresar", "Index", new { area = "" }, new { @class = "btn btn-primary", @title = "Regresar" })</a>
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        

        $(document).ready(function () {

            var fecha = $("#tFin").val();
           
            var dd = fecha.substring(0, 2);
            var MM = fecha.substring(3, 5);
            var yy = fecha.substring(6, 10);
            
            $("#FechaMovimiento").val(yy + "-" + MM + "-" + dd);



           
           
        });

      
        
    </script>
}
