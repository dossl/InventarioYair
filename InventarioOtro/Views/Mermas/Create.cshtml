@model InventarioOtro.Models.Merma

@{
    ViewBag.Title = "Agregar Merma";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<h4>Agregar</h4>
@if (ViewBag.Mensaje)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong>Atención!</strong> <a href="#" class="alert-link">Ya existen unidades de este producto en merma.</a> Modifique las existencia
    </div>
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Merma</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductoId,  htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div id="scrollable-dropdown-menu">
                            @Html.TextBox("findP", "", new { @class = "form-control", @placeholder="Producto", @required="true", @type = "text", @style = "width: 140%" })
                            
                        </div>
                            @Html.DropDownList("ProductoId", null, htmlAttributes: new { @class = "form-control", @style = "display:none" })
                            @Html.ValidationMessageFor(model => model.ProductoId, "", new { @class = "text-danger" })
                        </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control", @min = 1} })
                        @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Precio, "", new{ @class = "form-control" ,@type="number", @step = 0.05,@min =0.05})
                        @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        

       

       

        <div class="row" style="margin-top: 20px">
            <div class="col-md-offset-2 col-md-1">
                <input id="btnCrear" type="submit" value="Aceptar" class="btn btn-primary" />
            </div>
            <div class="col-md-offset-2 col-md-2">
                <a role="button">@Html.ActionLink("Regresar", "Index", new { area = "" }, new { @class = "btn btn-primary", @title = "Regresar" })</a>
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function() {

            ///////////////////////buscar productos//////////////////////////////////
            var productos = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Carticulo'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,

                remote: {
                    url: '../api/productos?query=%QUERY',
                    wildcard: '%QUERY'
                }

            });
            var disp = Handlebars.compile("{{Carticulo}}");
            $("#scrollable-dropdown-menu .form-control").typeahead({
                    minLength: 1,
                    highlight: false,
                    hint: false
                },
                {
                    name: 'productos',
                    display: disp,
                    source: productos,
                    templates: {
                        empty: [
                            '<div class="empty-message" style="margin-left:10px">',
                            ' No hay coincidencias',
                            '</div>'
                        ].join('\n'),
                        suggestion: Handlebars.compile(
                            '<div>' +
                            '<div class="row">{{Carticulo}} - Desc.: {{Cdescripcion}}</div>' +
                            '<div class="row">Lote: {{Clote}} - Disp: {{Ndisponibilidad}} - PC: {{Npreccosto}} - PMI: {{Nprecminoris}} - PMA: {{Nprecmayoris}}</div></div>')
                    }
                }).on("typeahead:select",
                function(e, producto) {

                    $("#ProductoId").val(producto.ID);

                    $("#Cantidad").prop("max", producto.Ndisponibilidad);
                    $("#Cantidad").val(producto.Ndisponibilidad);
                    $("#Precio").val(producto.Nprecminoris);

                });


        });

        $("#btnCrear").on("click", function() {

            if ($("#findP").val() === "" ) {
                    bootbox.alert("Producto es un campo obligatorio");
                }
            });

    </script>
}
